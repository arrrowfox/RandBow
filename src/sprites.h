#include <iostream>
#include <string>
#include <cctype>
using namespace std;
int font[26][10][10]{ {{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,1,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,1,1,1,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,1,1,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,1,1,0,0},
{0,0,0,1,0,1,0,1,0,0},
{0,0,0,1,0,1,0,1,0,0},
{0,0,0,1,0,0,0,1,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,1,0,1,0,0,0},
{0,0,0,1,0,1,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,1,0,0,1,0,0,0,0},
{0,0,1,0,0,1,0,0,0,0},
{0,0,1,0,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,1,1,0,0,0},
{0,0,0,0,1,1,1,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,0,1,1,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,1,0,0,0,1,0,0,0},
{0,0,1,0,0,0,1,0,0,0},
{0,0,1,0,0,0,1,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,1,0,0,0,1,0,0,0},
{0,0,1,0,1,0,1,0,0,0},
{0,0,1,1,0,1,1,0,0,0},
{0,0,1,1,0,1,1,0,0,0},
{0,0,1,0,0,0,1,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,1,0,0,0,1,0,0,0},
{0,0,1,1,0,1,1,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,1,1,0,1,1,0,0,0},
{0,0,1,0,0,0,1,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0}
},
{ {0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,1,1,1,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,1,0,0,0,0,0,0,0},
{0,0,1,1,1,1,0,0,0,0}
} };
int numfont[10][10][10]{ {{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,0,1,1,0,0,0,0}
},{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,1,0,0,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,1,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,1,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,0,1,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,0,0,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,1,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,0,0,0,1,0,0,0},
{0,0,0,1,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,0,0,0,0},
{0,0,0,1,1,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,0,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,1,1,1,1,0,0,0},
{0,0,0,0,0,0,1,0,0,0},
{0,0,0,0,0,1,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0},
{0,0,0,0,1,0,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,0,1,1,0,0,0,0},
{0,0,0,1,0,0,1,0,0,0},
{0,0,0,0,1,1,0,0,0,0}
},
{{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,1,1,0,0,0},
{0,0,0,0,1,0,1,0,0,0},
{0,0,0,0,1,1,1,0,0,0},
{0,0,0,0,0,0,1,0,0,0},
{0,0,0,0,0,0,1,0,0,0}
}
};
int palet[10][4]{
	{23, 18, 36, 255},
	{136, 55, 76, 255},
	{71, 125, 168, 255},
	{237, 219, 102, 255},
	{255, 156, 77, 255},
	{101, 201, 111, 255},
	{92, 53, 112, 255},
	{244, 245, 242, 255},
	{184, 132, 118, 255},
	{255, 203, 163, 255}
};
void drawsprite(SDL_Renderer* renderer, int arg[10][10], int offsetx = 0, int offsety = 0, int scale = 1) {
	for (int a = 0; a < 10; a++)
	{
		for (int b = 0; b < 10; b++)
		{
			SDL_SetRenderDrawColor(renderer, palet[arg[b][a]][0], palet[arg[b][a]][1], palet[arg[b][a]][2], palet[arg[b][a]][3]);
			SDL_Rect rect({ a * scale + offsetx,b * scale + offsety, scale, scale });
			SDL_RenderFillRect(renderer, &rect);

		}
	}
}
void drawpix(SDL_Renderer* renderer, int arg, int offsetx = 0, int offsety = 0, int scale = 1) {
	SDL_SetRenderDrawColor(renderer, palet[arg][0], palet[arg][1], palet[arg][2], palet[arg][3]);
	SDL_Rect rect({ scale * offsetx,scale * offsety, scale * 50, scale*50 });
	SDL_RenderFillRect(renderer, &rect);
}
void flipdrawsprite(SDL_Renderer* renderer, int arg[10][10], int offsetx = 0, int offsety = 0, int scale = 1) {
	for (int a = 0; a < 10; a++)
	{
		for (int b = 0; b < 10; b++)
		{
			SDL_SetRenderDrawColor(renderer, palet[arg[a][b]][0], palet[arg[a][b]][1], palet[arg[a][b]][2], palet[arg[a][b]][3]);
			SDL_Rect rect({ a * scale + offsetx,b * scale + offsety, scale, scale });
			SDL_RenderFillRect(renderer, &rect);

		}
	}
}
void draw_circle(SDL_Renderer* renderer, SDL_Point center, int radius)
{
	for (int w = 0; w < radius * 2; w++)
	{
		for (int h = 0; h < radius * 2; h++)
		{
			int dx = radius - w;
			int dy = radius - h;
			if ((dx * dx + dy * dy) <= (radius * radius))
			{
				SDL_RenderDrawPoint(renderer, center.x + dx, center.y + dy);
			}
		}
	}
}
void drawtext(SDL_Renderer* renderer, string text, SDL_Point ofset) {
	for (int i = 0; i < int(text.length()); i++)
	{
		text[i] = tolower(text[i]);
	}
	for (int i = 0; i < int(text.length()); i++) {
		if (int(text.at(i)) - 97 >= 0) {
			drawsprite(renderer, font[int(text.at(i)) - 97], ofset.x + (i * 25), ofset.y, 5);
		}
		
	}
}
void drawnum(SDL_Renderer* renderer, string text, SDL_Point ofset) {
	for (int i = 0; i < int(text.length()); i++) {
		if (int(text.at(i)) - 48 >= 0) {
			drawsprite(renderer, numfont[int(text.at(i)) - 48], ofset.x + (i * 25), ofset.y, 5);
		}

	}
}